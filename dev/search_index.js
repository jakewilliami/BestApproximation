var documenterSearchIndex = {"docs":
[{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Modules = [BestApproximation]","category":"page"},{"location":"usage/#Main.BestApproximation.best_approx-Tuple{Number,AbstractRange,AbstractRange}","page":"Usage","title":"Main.BestApproximation.best_approx","text":"best_approx(n::Number, I::AbstractRange, J::AbstractRange)\nbest_approx(n::Number, I_max::Integer, J::Integer)\n\nFor a given number n, given two ranges I and J, finds the nicest solution such that\n\ni^j approx n text for  i in I j in j\n\nReturns (i, j) as a tuple.\n\nGiven integers I_textmax and J_textmax it will assume the ranges between I =  leftlbrack 1 I_textmaxrightrbrack and J =  leftlbrack 1 J_textmaxrightrbrack.\n\nnote: Note\nThis is a much slower variant than the other method for best_approx.  It is recommended that you use the \"cleverer\" method unless you need to constrict the exponent.\n\n\n\n\n\n","category":"method"},{"location":"usage/#Main.BestApproximation.best_approx-Tuple{Number,AbstractRange}","page":"Usage","title":"Main.BestApproximation.best_approx","text":"best_approx(n::Number, R::AbstractRange)\nbest_approx(n::Number, R_max::Integer)\n\nFor a given number n, given a range R, finds the \"nicest\" solution of m such that\n\nr^m approx n text for  r in R\n\nReturns (r, m) as a tuple.\n\nGiven an integer R_textmax it will assume the range between R = leftlbrack 1 R_textmaxrightrbrack.\n\n\n\n\n\n","category":"method"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Given a potentially very large number, it is sometimes nice to approximate this.  To find the \"best\", or \"nicest\" approximation, usually we restrict the base of an exponent, so that your given number n is approximately b^x.  The idea is that b^x is nicer looking than your input.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"This is a very small package exporting a function to find b and x, given a range b can be in.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = BestApproximation\nDocTestSetup = quote\n    using BestApproximation\nend","category":"page"},{"location":"#Installing-BestApproximation.jl","page":"Home","title":"Installing BestApproximation.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"BestApproximation\")","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
